
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	//++ Диплом
	// регистр ВКМ_РеализацииКДоговорам
	Движения.ВКМ_РеализацииКДоговорам.Записывать = Истина;
	Движение = Движения.ВКМ_РеализацииКДоговорам.Добавить();
	Движение.Период = Дата;
	Движение.Договор = Договор;
	Движение.Реализация = Ссылка;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
    
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ

   //конец
КонецПроцедуры

Процедура ВыполнитьАвтозаполнение() Экспорт
	//++Диплом
	НоменклатураАбПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботы = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	
	Если НоменклатураАбПлата = Неопределено Или НоменклатураРаботы = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю("Необходимо заполнить номенклатуры!");
		Отказ = Истина;
	КонецЕсли;
	
	Товары.Очистить(); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(РеализацияТоваровУслуг.Договор.ВКМ_СуммаАбонентскойПлатыЕжемесечно, 0) КАК СуммаАбПлаты,
		|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот, 0) КАК КоличествоЧасов,
		|	ЕСТЬNULL(ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор.ВКМ_СтоимостьЧасаРабот КАК СтоимостьЧасаРабот
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоПериода, &КонецПериода, , ) КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
		|		ПО РеализацияТоваровУслуг.Договор = ВКМ_ВыполненныеКлиентуРаботыОбороты.Договор
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СуммаАбПлаты <> 0 Тогда
			НоваяСтрокаТЧ = Товары.Добавить();
			НоваяСтрокаТЧ.Номенклатура = НоменклатураАбПлата;
			НоваяСтрокаТЧ.Количество = 1;
			НоваяСтрокаТЧ.Цена = Выборка.СуммаАбПлаты;
			НоваяСтрокаТЧ.Сумма = Выборка.СуммаАбПлаты;
		КонецЕсли;
		
		Если Выборка.КоличествоЧасов <> 0 Тогда
			НоваяСтрокаТЧ = Товары.Добавить();
			НоваяСтрокаТЧ.Номенклатура = НоменклатураРаботы;
			НоваяСтрокаТЧ.Количество = Выборка.КоличествоЧасов;
			НоваяСтрокаТЧ.Цена = Выборка.СтоимостьЧасаРабот;
			НоваяСтрокаТЧ.Сумма = Выборка.СуммаКОплате;
		КонецЕсли;	
		
	КонецЦикла;
	
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение);
	//конец
КонецПроцедуры

#КонецОбласти

#КонецЕсли

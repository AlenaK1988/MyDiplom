
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//++Диплом
	СформироватьДвижение();
	
	РассчитатьОклад();
	
	РассчитатьОтпускные();
    //конец
КонецПроцедуры

Процедура СформироватьДвижение()
//++Диплом	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеЗарплатыНачисления.Подразделение КАК Подразделение,
		|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания,
		|	ВКМ_НачислениеЗарплатыНачисления.ГрафикРаботы КАК ГрафикРаботы
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		// регистр ВКМ_ОсновныеНачисления
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Выборка.ДатаНачала;
		Движение.ПериодДействияКонец = Выборка.ДатаОкончания;
		Движение.ВидРасчета = Выборка.ВидРасчета;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Подразделение = Выборка.Подразделение;
		Движение.ГрафикРаботы = Выборка.ГрафикРаботы;	
		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Выборка.ДатаНачала, - 12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Выборка.ДатаОкончания, -1));
		КонецЕсли;	
		
		// регистр ВКМ_Удержания
		ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвижениеНДФЛ.Регистратор = Ссылка; 
		ДвижениеНДФЛ.ПериодРегистрации = Дата;
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеНДФЛ.БазовыйПериодНачало = Выборка.ДатаНачала;
		ДвижениеНДФЛ.БазовыйПериодКонец = Выборка.ДатаОкончания;
		ДвижениеНДФЛ.Сотрудник = Выборка.Сотрудник;
				
		// регистр ВКМ_ВзаиморасчетыССотрудниками Приход
		ДвижениеНачисление = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		ДвижениеНачисление.ВидДвижения = ВидДвиженияНакопления.Приход; 
		ДвижениеНачисление.Регистратор = ССылка;
		ДвижениеНачисление.Период = Дата;
		ДвижениеНачисление.Сотрудник = Выборка.Сотрудник;
				
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	//конец
КонецПроцедуры	
	
Процедура РассчитатьОклад()
    //++Диплом
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	СтрокиОклада = Начисления.НайтиСтроки(Отбор);
	
	Если СтрокиОклада.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачислениеЗарплатыНачисления.НомерСтроки КАК НомерСтроки,
		|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеЗарплатыНачисления.Подразделение КАК Подразделение,
		|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
		|	ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад
		|ПОМЕСТИТЬ ВТ_ДанныеСотрудниковОклад
		|ИЗ
		|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
		|				&Дата,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник
		|					ИЗ
		|						Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВКМ_НачислениеЗарплатыНачисления.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета = &ВидРасчета
		|	И ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеСотрудниковОклад.НомерСтроки КАК НомерСтроки,
		|	ВТ_ДанныеСотрудниковОклад.Сотрудник КАК Сотрудник,
		|	ВТ_ДанныеСотрудниковОклад.Подразделение КАК Подразделение,
		|	ВТ_ДанныеСотрудниковОклад.ВидРасчета КАК ВидРасчета,
		|	ВТ_ДанныеСотрудниковОклад.ДатаНачала КАК ДатаНачала,
		|	ВТ_ДанныеСотрудниковОклад.ДатаОкончания КАК ДатаОкончания,
		|	ВТ_ДанныеСотрудниковОклад.Оклад КАК Оклад,
		|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаКОплате
		|ПОМЕСТИТЬ ВТ_ДанныеСотрудниковРаботы
		|ИЗ
		|	ВТ_ДанныеСотрудниковОклад КАК ВТ_ДанныеСотрудниковОклад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(
		|				&ДатаНачала,
		|				&ДатаОкончания,
		|				,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВКМ_НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник
		|					ИЗ
		|						Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
		|					ГДЕ
		|						ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ВТ_ДанныеСотрудниковОклад.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеСотрудниковРаботы.НомерСтроки КАК НомерСтроки,
		|	ВТ_ДанныеСотрудниковРаботы.Сотрудник КАК Сотрудник,
		|	ВТ_ДанныеСотрудниковРаботы.Подразделение КАК Подразделение,
		|	ВТ_ДанныеСотрудниковРаботы.ВидРасчета КАК ВидРасчета,
		|	ВТ_ДанныеСотрудниковРаботы.ДатаНачала КАК ДатаНачала,
		|	ВТ_ДанныеСотрудниковРаботы.ДатаОкончания КАК ДатаОкончания,
		|	ВТ_ДанныеСотрудниковРаботы.Оклад КАК Оклад,
		|	ВТ_ДанныеСотрудниковРаботы.СуммаКОплате КАК СуммаКОплате,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейПериодДействия КАК План,
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейФактическийПериодДействия КАК Факт
		|ИЗ
		|	ВТ_ДанныеСотрудниковРаботы КАК ВТ_ДанныеСотрудниковРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВТ_ДанныеСотрудниковРаботы.Сотрудник = ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник
		|ГДЕ
		|	ВКМ_ОсновныеНачисленияДанныеГрафика.Регистратор = &Ссылка";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1]; 
		
		Если Выборка.План = 0 Тогда
				Движение.Результат = 0;
			Иначе
				Если Движение.Подразделение = Справочники.ВКМ_Подразделения.АдминистративныйПерсонал Тогда
					НачисленнаяЗП = Выборка.Оклад * Выборка.Факт / Выборка.План; 
				ИначеЕсли 
					Движение.Подразделение = Справочники.ВКМ_Подразделения.Специалисты Тогда
					НачисленнаяЗП = Выборка.Оклад * Выборка.Факт / Выборка.План + Выборка.СуммаКОплате;
				КонецЕсли; 
				
				Движение.Результат = НачисленнаяЗП; 
				СуммаНДФЛ = НачисленнаяЗП * 13 / 100; 
								
				ДвижениеНДФЛ = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
				ДвижениеНДФЛ.Результат = СуммаНДФЛ;
				
				ДвижениеНачисление = Движения.ВКМ_ВзаиморасчетыССотрудниками[Выборка.НомерСтроки - 1];
				ДвижениеНачисление.Сумма = Движение.Результат - СуммаНДФЛ;
			КонецЕсли;	
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);  
	Движения.ВКМ_Удержания.Записать( , Истина);
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();	
	//конец
КонецПроцедуры

Процедура РассчитатьОтпускные()
	//++Диплом
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные);
	
	СтрокиОтпускных = Начисления.НайтиСтроки(Отбор);
	
	Если СтрокиОтпускных.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК Результат,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейФактическийПериодДействия, 0) КАК Факт,
		|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.РабочихДнейПериодДействия, 0) КАК План
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
		|				&Измерение,
		|				&Измерение,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
		|				Регистратор = &Ссылка
		|					И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчета";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные);
	Измерение = Новый Массив;
	Измерение.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерение", Измерение);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Если Выборка.План = 0 Тогда
			Движение.Результат = 0; 
		Иначе
			Движение.Результат = Выборка.Результат * Выборка.Факт / Выборка.План;
		КонецЕсли;	
		
		СуммаНДФЛ = Движение.Результат * 13 / 100;
		
		ДвижениеНДФЛ = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		ДвижениеНДФЛ.Результат = СуммаНДФЛ;
		
		ДвижениеНачисление = Движения.ВКМ_ВзаиморасчетыССотрудниками[Выборка.НомерСтроки - 1];
		ДвижениеНачисление.Сумма = Движение.Результат - СуммаНДФЛ;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);
	Движения.ВКМ_Удержания.Записать( , Истина);
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	//конец
КонецПроцедуры	

Процедура РассчитатьДополнительныеНачисления()
	//++Диплом
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДополнительныеНачисленияБазаОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	               |	ДополнительныеНачисленияБазаОсновныеНачисления.РезультатБаза КАК РезультатБаза,
	               |	(РАЗНОСТЬДАТ(ДополнительныеНачисленияБазаОсновныеНачисления.ФизическоеЛицо.ДатаПриема, &Период, МЕСЯЦ) + ДополнительныеНачисленияБазаОсновныеНачисления.ФизическоеЛицо.НачальныйСтаж) / 12 КАК СтажЛет
	               |ПОМЕСТИТЬ ВТ_ДанныеСтажа
	               |ИЗ
	               |	РегистрРасчета.ДополнительныеНачисления.БазаОсновныеНачисления(
	               |			&Измерения,
	               |			&Измерения,
	               |			,
	               |			Регистратор = &Ссылка
	               |				И ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчета.ПремияОтСтажа)) КАК ДополнительныеНачисленияБазаОсновныеНачисления
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеСтажа.НомерСтроки КАК НомерСтроки,
	               |	ВТ_ДанныеСтажа.РезультатБаза КАК РезультатБаза,
	               |	ПроцентПремииПоСтажу.ПроцентПремии КАК ПроцентПремии
	               |ИЗ
	               |	ВТ_ДанныеСтажа КАК ВТ_ДанныеСтажа
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентПремииПоСтажу КАК ПроцентПремииПоСтажу
	               |		ПО (ВТ_ДанныеСтажа.СтажЛет МЕЖДУ ПроцентПремииПоСтажу.НачалоДиапазона И ВЫБОР
	               |				КОГДА ПроцентПремииПоСтажу.КонецДиапазона = 0
	               |					ТОГДА 9999999999
	               |				ИНАЧЕ ПроцентПремииПоСтажу.КонецДиапазона
	               |			КОНЕЦ)";
	
	НачалоПредыдущегоКваратала = ДобавитьМесяц(НачалоКвартала(Дата), -3);
	
	Измерения = Новый Массив;
	Измерения.Добавить("Подразделение");
	Измерения.Добавить("ФизическоеЛицо");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Измерения", Измерения);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ДополнительныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Результат = Выборка.РезультатБаза * Выборка.ПроцентПремии / 100;
		
	КонецЦикла;
	
	Движения.ДополнительныеНачисления.Записать(, Истина);	
	//конец
КонецПроцедуры

#КонецОбласти

#КонецЕсли


